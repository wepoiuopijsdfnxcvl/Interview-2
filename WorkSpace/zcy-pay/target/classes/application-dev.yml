###########################
###      开发环境       ###
###########################
#contextpath & port
server:
  servlet:
    context-path: /
  port: 9999

# mysql

#druid数据源配置
spring:
  datasource:
    url: jdbc:mysql://172.16.5.101:3306/integral_pay?allowMultiQueries=true&useSSL=false
    username: root
    password: Ibudata@123
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 连接池的配置信息
    # 初始化大小，最小等待连接数量，最大等待连接数量，最大连接数
    initialSize: 1
    minIdle: 1
    #maxIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: false
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true

###########################
###说明：
    #- spring.datasource.druid.max-active 最大连接数
    #- spring.datasource.druid.initial-size 初始化大小
    #- spring.datasource.druid.min-idle 最小连接数
    #- spring.datasource.druid.max-wait 获取连接等待超时时间
    #- spring.datasource.druid.time-between-eviction-runs-millis 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    #- spring.datasource.druid.min-evictable-idle-time-millis 一个连接在池中最小生存的时间，单位是毫秒
    #- spring.datasource.druid.filters=config,stat,wall,log4j 配置监控统计拦截的filters，去掉后监控界面SQL无法进行统计，’wall’用于防火墙
###########################


#mybatis settings
mybatis:
  mapper-locations: classpath:mapper/*.xml
