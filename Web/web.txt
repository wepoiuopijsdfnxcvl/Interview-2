转发和重定向：
			1.转发时浏览器发送了1次请求，重定向时浏览器发送了2次请求。
			2.转发是在服务器内部进行的，重定向是在浏览器端进行的。
			3.转发时地址栏不会发生改变，重定向时地址栏会发生改变。
			4.转发时request域中的属性不会丢失，重定向时request域中的属性会丢失。
			5.转发：
				request.getRequestDispatcher("路径").forward(request,response);
			  重定向:
				response.sendRedirect("路径");
				
- JSP本质就是一个Servlet
	- 我们在访问一个JSP时，服务器会将JSP翻译为一个Servlet，然后在调用Servlet来处理请求。
	- jsp --翻译--> java --编译--> class
	- JSP中的隐含对象
		- 隐含对象指可以在JSP中直接使用的对象
		- JSP中一共有9个隐含对象
			pageContext
				- 类型 PageContext
				
			request
				- 类型 HttpServletRequest
				
			session
				- 类型 HttpSession
			
			application
				- 类型 ServletContext
			
			out
				- 类型 JspWriter
			
			page
				 - 类型 Object
			
			response
				- 类型 HttpServletResponse
			
			exception
				- 类型 Throwable
			
			config
				- 类型 ServletConfig
				
		- 在JavaWeb中一共有四个域对象pageContext 、 request 、session 、 application
		- 在JSP可以获取全部四个域对象，在Servlet中只能获取三个，获取不到PageContext。				

Servlet生命周期分为三个阶段？
　　1，初始化阶段  调用init()方法
　　2，响应客户请求阶段　　调用service()方法
　　3，终止阶段　　调用destroy()方法		
				
Filter的生命周期方法：
		构造器：服务器一启动就会调用，用来创建Filter的实例，只会调用一次，Filter也是单例。
		init：构造器调用之后马上被调用，用来初始化Filter，只会调用一次
		doFilter：每次拦截请求时都会调用，会调用多次
		destroy：Filter被销毁前(项目卸载时)调用，用来做一些收尾工作，只会调用一次			
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				